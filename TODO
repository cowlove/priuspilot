2023/11/09 
	TODO - separate out reDouble() 
	TODO - parse button hints from GPSTrimCheat
	TODO - separate out out quality-detection and fade code from PID 
	TODO - new hardware to allow for usable power steering
	TODO - change esp32 firmware to increase max steering power to 0.60
	TODO - separate out ESPNow into own JNI interface
	TODO - bidirectional EPSNow 
	TODO - investigate rebase options for new uses of RunningLeastSquares pid.q and avgLaneWidth
	TODO - lane pos trim biases the VP pid and winds up the lane PID integrals, possibly adjust VP with lanepostrim
	TODO - auto limit FPS to 15 rather than require manual -skiprate flag
	

11/17/2023 excellent results with these changes


good north/south I-5 with bright glare, direct sun, dapples 
20231116.141353.yuv 20231116.140744.yuv 

for f in \
	./lanedumps/20231114.181221.yuv \
	./lanedumps/20231114.181623.yuv \
	./lanedumps/20231116.140744.yuv \
	./lanedumps/20231116.141353.yuv \
	./lanedumps/20231117.174827.yuv \
	./lanedumps/20231117.175518.yuv \
	./lanedumps/20231119.101920.yuv \
;do ./scripts/pp $f -headless | grep RMS; done

# ./lanedumps/20231114.181221.yuv frames 00000-02481 FPS=070.42 RMS errs: LL=0.01143 0.00806 0.99264, RL=0.00775 0.00846 0.99164, VP=0.00806 0.00161 0.99189, avgAction=0.14695 avgLogDiff=0.00000
# ./lanedumps/20231114.181623.yuv frames 00000-03611 FPS=072.25 RMS errs: LL=0.01131 0.00305 0.99457, RL=0.00945 0.00222 0.99603, VP=0.01034 0.05566 0.94193, avgAction=0.16231 avgLogDiff=0.00000
# ./lanedumps/20231116.140744.yuv frames 00000-04570 FPS=059.10 RMS errs: LL=0.01531 0.01554 0.97691, RL=0.01107 0.02035 0.97332, VP=0.01178 0.08228 0.92179, avgAction=0.17873 avgLogDiff=0.00000
# ./lanedumps/20231116.141353.yuv frames 00000-04211 FPS=081.37 RMS errs: LL=0.01428 0.02351 0.97976, RL=0.01023 0.03206 0.97191, VP=0.01049 0.06554 0.93653, avgAction=0.15849 avgLogDiff=0.00000
# ./lanedumps/20231117.174827.yuv frames 00000-04900 FPS=084.03 RMS errs: LL=0.01464 0.02510 0.97372, RL=0.01171 0.04551 0.96081, VP=0.01133 0.08061 0.92472, avgAction=0.18780 avgLogDiff=0.00000
# ./lanedumps/20231117.175518.yuv frames 00000-04280 FPS=057.01 RMS errs: LL=0.01290 0.02477 0.97564, RL=0.01071 0.05164 0.95532, VP=0.00963 0.03762 0.96095, avgAction=0.18313 avgLogDiff=0.00000
# ./lanedumps/20231119.101920.yuv frames 00000-03028 FPS=078.49 RMS errs: LL=0.01039 0.00198 0.99648, RL=0.00959 0.00066 0.99821, VP=0.00973 0.03666 0.96325, avgAction=0.12278 avgLogDiff=0.00000

for f in ./lanedumps/20231114.181221.yuv ./lanedumps/20231114.181623.yuv \
	./lanedumps/20231116.140744.yuv         ./lanedumps/20231116.141353.yuv \
	./lanedumps/20231117.174827.yuv    ./lanedumps/20231117.175518.yuv   \
	./lanedumps/20231119.101920.yuv ; 
	do echo $f; for p in .12 .85 .95; do echo -n "$p: ";
	 	./scripts/pp $f  -debug PCTLUM=$p -headless | grep RMS; done ; done



failures for this commit:
# crack distractor
./scripts/pp ./lanedumps/20231116.141353.yuv -skip 1250 -exit 300
# crack distractor
./scripts/pp ./lanedumps/20231116.140744.yuv  -skip 2750 -exit 200
# crack distractors all along AWS
./scripts/pp /host/lanedumps/20231119.101920.yuv -skip 1500






/host/lanedumps/20231116.141353.yuv - good, except crack at 1200-1500 and 

/scripts/pp lanedumps/20231114.180029.yuv -debug EXPECTED_FPS=15 -debug SZ_PERIOD=5 -debug minSz=33 -debug defLAng=65 -rescale 2 -debug LASTEP=-0.9 -log lastep09.log 

lanedumps/20231114.180029.yuv frames 00000-03830 FPS=027.07 RMS errs: LL=0.0181513 0.0483029 0.9460675, RL=0.0128105 0.0281984 0.9721301, VP=0.0119665 0.0973890 0.9090727, avgAction=0.0457513


* cloned/built gpsd from github for newer/fresher ubxtool that could actually configure the GPS ok


2022/10/10 Investigate left lane loss in I5S
	time ./scripts/pp lanedumps/20221010.145903.yuv -rescale 4 -skip 2900 -exit 300 -displayratio 0 
	lanedumps/20221010.145903.yuv: Avg fr=49.33, RMS errs: HL=0.02840, HR=0.00122, VP=0.01041
                                                          ^^^^^^^^^^
Got scan zones focus working, improved to 00651 
	lanedumps/20221010.145903.yuv: Avg fr=47.13, RMS errs: HL=0.00651, HR=0.00109, VP=0.00402
 
TODO - fix FrameCaptureJNI interface to support multiple cameras/instances of interface. 


07/13/11  Just finished switching to HP 360p HD camera.  Works really well, 
	barely holds 30FPS, need the following failures
	
20110713.121415.yuv last part BTLN, L line failure, follows concrete sealant, 
	needs canny threshold of 9-10
20110713.121836.yuv BTLS, per van drifts left
FIXED 20110713.122308.yuv Entire BTLN, failed lane switches at -skip 3200	test case 
20110712.204053.yuv NB I405 dusk, faint line problem, needs low canny threshold of 5-6
20110713.204833.yuv  I90 WB at dusk, faint lane problem, needs low canny of 5-6

Autotune canny parameters - possibly offline heuristic.  Does 10 give a lock?  use it. 
Otherwise, use 5.   When using 5, periodically try 10, see if gives same lock.  If so, 
revert to 10. 




Toe-in

Look at hough stuff, see why isn't more precise, investigate parameters, see
if 75x75 field is really necessary

Understand why targetfinder line correlation doesn't properly compute the 
proper radius/angle step interval.  Now hardcoded to someting fixed

Investigate why hand-calculated frame size scaling factors didn't work, and 
why had to re-tune the perspective PID controllers. 

Finish automatic day/night mode switching.  Possibly need to use manual brightness
adjustment. 

There still are some squirrely lines that show up in the hough perspective VP 
grid.  Investigate. 


* TODO - test case /host/lanedumps/20110710.194915.yuv grabs asphalt sealant line instead of left lane line    

		l /host/lanedumps/20110710.194915.yuv -nodrop -jni -displayratio 1 -debug 0 -skip 4000 
	IDEAS - expand check for proper luminance pixel next to canny pixel to check for a certain number
	of pixesl, enforcing a minimum lane line width requirement. 

	Seems to need a lineluminancedelta of about 55, but then is very flakey
	
	idea- transform on the hough space, multiply each bucket by the value of its constant offset neighbor, with
	constant offsets chosen so that the two sides of a lane line are the only thing that correlate. 
		

* TODO prepare for double cameras

* Make protocol to arduino more robust.  Right now a readSerialInt failure returns zero, so any serial gibberish containing a "s" gives full left control input.  Idea- checksum

* Todo- Log cruise control inputs and outputs to log file 

* Similar thing for line, move line in to the innermost line over a high percentage threshold
of the global max score

* In TFRed and others, keep a large search area, but make separate and tighter constraints on the center
  of the target- must be closer to the center of the search area?

* Ideas for better result filtering in TFRed - for each red blob, select based on horizontal/vertical internal symmetry, 
  height-width ratio constraints, then apply symmetry test to pairs of blobs rather than the entire rectangle image. 
  Finally, enforce much closer constraints to vehicle centerline. 
  
    
* In TF line, do color filtering as discussed in papers

* Investigate the smallest reasonable joystick pulse that can be used to spoof cruise control inputs

* For detecting a loss of lock in TD tracking:
	- look at a narrow y range constrait, 
  	-  or enforce x/y/z correlation
  	- Look at variance of matched image, rather than the variance of the pixel error values
  
* In TD, make sure the variance value being used as a quality indicator 
  is variance of the test target, not variance of the match error.  I suspect
  it's the latter 

* In TD, introduce getImageByte abstraction to replace direct pic[], access
  in preparation of yuyv image formats

* Clean out FrameProcessor - create PidStatusDisplay, CruiseControl, KeyboardInterface,
  move command formatting into SerialBusInterface.setSteer(), setCruise(), setTorqueLimit()
  
* Clean out PidControl, remove second parameters, etc.  

* Clean out/remove LaneAnalyzer

* Pull out common TF/TD parameters into a class so that it can be selected by the configuration interface in the same
 	manner as PID-  suggestions - canny parameters, gaussian smooth parameters, color filter parameters HSL hi/lo,
 	hough transform angle/radius constraints, nonmax suppression parameters, maybe a generic threshold or percentage or
 	two?  
 	
* Pulldown configuration parameter list in the GUI

* TODO for Morning of 4/11  
	-  NOT DONE make display ratio a fps figure
		
*  Took data on apparent nonlinear gain of system 
Offset vs	Similar-feeling oscillation magnitude
steer offset vs.  sine wave magnitude 
0		.20
.1		.20
.2		.15
.3		.09
.4		.05
.5		.03

